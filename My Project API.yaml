openapi: 3.0.3
info:
  title: My Project API
  version: 1.0.0
  description: API документация моего проекта
paths:
  /analitics/stats/:
    get:
      operationId: analitics_stats_retrieve
      tags:
      - analitics
      responses:
        '200':
          description: No response body
  /analitics/visual/:
    get:
      operationId: analitics_visual_retrieve
      tags:
      - analitics
      responses:
        '200':
          description: No response body
  /api/expenses/:
    get:
      operationId: api_expenses_list
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'
          description: ''
    post:
      operationId: api_expenses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
  /api/expenses/{id}/:
    get:
      operationId: api_expenses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    put:
      operationId: api_expenses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    patch:
      operationId: api_expenses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    delete:
      operationId: api_expenses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/incomes/:
    get:
      operationId: api_incomes_list
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Income'
          description: ''
    post:
      operationId: api_incomes_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Income'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Income'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
  /api/incomes/{id}/:
    get:
      operationId: api_incomes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
    put:
      operationId: api_incomes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Income'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Income'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
    patch:
      operationId: api_incomes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIncome'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIncome'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIncome'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
    delete:
      operationId: api_incomes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /categories/:
    get:
      operationId: categories_retrieve
      tags:
      - categories
      security:
      - {}
      responses:
        '200':
          description: No response body
  /categories/expences/:
    get:
      operationId: categories_expences_retrieve
      tags:
      - categories
      security:
      - {}
      responses:
        '200':
          description: No response body
  /categories/incomes/:
    get:
      operationId: categories_incomes_retrieve
      tags:
      - categories
      security:
      - {}
      responses:
        '200':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /users/user/:
    get:
      operationId: users_user_list
      tags:
      - users
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_user_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/user/{id}:
    get:
      operationId: users_user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      responses:
        '204':
          description: No response body
components:
  schemas:
    Expense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 1000
        value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        category:
          $ref: '#/components/schemas/ExpenseCategoryEnum'
      required:
      - created_at
      - id
      - updated_at
    ExpenseCategoryEnum:
      enum:
      - rent
      - utilities
      - transport
      - communication
      - health
      - loan
      - groceries
      - eating_out
      - clothes
      - entertainment
      - gifts
      - education
      - beauty
      - other
      type: string
      description: |-
        * `rent` - Жилье / Аренда
        * `utilities` - Коммунальные платежи
        * `transport` - Транспорт
        * `communication` - Связь
        * `health` - Здоровье
        * `loan` - Кредиты
        * `groceries` - Продукты
        * `eating_out` - Кафе и рестораны
        * `clothes` - Одежда и обувь
        * `entertainment` - Развлечения
        * `gifts` - Подарки
        * `education` - Образование
        * `beauty` - Красота и уход
        * `other` - Другое
    Income:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 1000
        value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        updated_at:
          type: string
          format: date-time
          readOnly: true
        category:
          $ref: '#/components/schemas/IncomeCategoryEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - updated_at
    IncomeCategoryEnum:
      enum:
      - salary
      - freelance
      - gift
      - investment
      - cashback
      - other
      type: string
      description: |-
        * `salary` - Зарплата
        * `freelance` - Дополнительный доход / Фриланс
        * `gift` - Подарки
        * `investment` - Инвестиции
        * `cashback` - Кэшбэк
        * `other` - Другое
    PatchedExpense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 1000
        value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        category:
          $ref: '#/components/schemas/ExpenseCategoryEnum'
    PatchedIncome:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 1000
        value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        updated_at:
          type: string
          format: date-time
          readOnly: true
        category:
          $ref: '#/components/schemas/IncomeCategoryEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        telegram_id:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_admin:
          type: boolean
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_alive:
          type: boolean
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        telegram_id:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_admin:
          type: boolean
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_alive:
          type: boolean
      required:
      - created_at
      - id
      - is_admin
      - telegram_id
      - updated_at
